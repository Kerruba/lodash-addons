!function(r,e){"function"==typeof define&&define.amd?define(["lodash"],e):"object"==typeof exports?module.exports=e(require("lodash")):r._=e(r._)}(this,function(r){return r.mixin({clamp:function(e,t,n){if(!r.isNumber(e))throw new TypeError("Value must be a number.");var i,o=r.isNumber(n)?n:t;if(r.isNumber(n)&&(i=t),!r.isNumber(o))throw new TypeError("Maximum boundary value must be a number.");if(i&&!r.isNumber(i))throw new TypeError("Minimum boundary value must be a number.");return e>o&&(e=o),r.isNumber(i)&&i>e&&(e=i),e}}),r.mixin({validatedAssign:function(e,t,n){if(!r.isObject(e))throw new Error("Model must be an object.");if(!r.isObject(t))throw new Error("Source must be an object.");n=r.isBoolean(n)?n:!0;var i={};return r.each(e,function(e,n){var o=r.has(e,"default")?e["default"]:e;if(r.has(t,n))if(r.has(e,"validator")){if(!r.isFunction(e.validator))throw new Error("Invalid validator function for "+n+".");e.validator(t[n])&&(o=t[n])}else r.isPlainObject(e)?o=r.validatedAssign(e,t[n]):typeof e==typeof t[n]&&(o=t[n]);i[n]=o}),n!==!0&&r.each(t,function(e,t){r.has(i,t)||(i[t]=e)}),i}}),r.mixin({isNonEmptyString:function(e){return r.isString(e)&&""!==e.trim()},generateKey:function(r){for(var e="",t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",n=0,i=r||16;i>n;n++)e+=t.charAt(Math.floor(Math.random()*t.length));return e},lowerFirstLetter:function(e){if(!r.isNonEmptyString(e))throw new TypeError('"str" must be a non-empty string.');return e.charAt(0).toLowerCase()+e.slice(1)},slugify:function(e){if(!r.isString(e))throw new TypeError('"str" must be a non-empty string.');return e.toLowerCase().replace(/([^a-zA-Z0-9\._-]+)/g,"-")}}),r});